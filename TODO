Update packages.
- [ ] Update README
- [ ] Update Dockerfile

Packeges
- [x] GCC 10.2.0 -> 11.2.0
- [x] CMake 3.18.4 -> 3.22.3 [https://github.com/Kitware/CMake/releases/download/v3.22.3/cmake-3.22.3.tar.gz]
- [x] Google Test 1.10.0 -> 1.13.0 [https://github.com/google/googletest/archive/refs/tags/release-1.13.0.tar.gz]
- [ ] Google Benchmark 1.6.0 -> 1.6.1 [https://github.com/google/benchmark/archive/refs/tags/v1.6.1.tar.gz]
- [x] SQLite 3.34.0 -> 3.38.0 [https://sqlite.org/2022/sqlite-autoconf-3380000.tar.gz]
- [x] Cppcheck 2.3 -> 2.7 [https://github.com/danmar/cppcheck/archive/2.7.tar.gz]
- [ ] Valgrind 3.14.0 -> 3.16.1
- [ ] AFL 2.57b -> AFL++ 4.00c [https://aflplus.plus/]
- [ ] Add {fmt} library
- [x] Use FetchContent instead of the install scripts for SQLite.
- [ ] Use FetchContent instead of the install scripts for Google Test.
- [ ] Use FetchContent instead of the install scripts for Google Benchmark.
- [ ] Use FetchContent instead of the install scripts. See the CMake tutorial
- [ ] Use Conan instead of FetchContent

[ ] Set modules path
    # Semicolon-separated list of directories, represented using forward slashes,
    # specifying a search path for CMake modules to be loaded by the include() or
    # find_package()
    set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_SOURCE_DIR}/cmake/")

[ ] Add CI file to run the tests in a pipeline

[ ] Remove unit test build from build.sh

[ ] Migrate tests from Tcl to Python, or leave two version

[ ] Try Conan to manage dependencies.

[ ] Finish the symbolic execution. May need a C program to test, because C++ doesn't seem to work fine. Discover if integer is the only variable type accepted.

[ ] Execute test/system using Robot framework

[ ] Run test/system embedded on top of QEMU

[ ] Migrate test/integration/test.tcl to Python

[ ] Load testing
